#!/bin/bash
# Browser picker for mimeapps integration
# The URL is passed as the first argument by xdg-open

URL="$1"

# Fix the config path (was missing /)
CONF_FILE="${XDG_CONFIG_HOME:-$HOME/.config}/browser-picker/browser-picker.conf"

# Ensure we have access to the display (important for rofi)
if [[ -z "$DISPLAY" && -z "$WAYLAND_DISPLAY" ]]; then
    # Fallback to default browser if no display available
    firefox "$URL" &
    exit 0
fi

# If no URL provided, exit silently (mimeapps might call without arguments)
if [[ -z "$URL" ]]; then
    exit 1
fi

# Check if config file exists
if [[ ! -f "$CONF_FILE" ]]; then
    echo "Config file not found: $CONF_FILE" >&2
    exit 1
fi

declare -A browsers

# Read browser configuration
while IFS='=' read -r browser bin; do
    # Skip empty lines and comments
    [[ -z "$browser" || "$browser" =~ ^[[:space:]]*# ]] && continue
    browsers["$browser"]="$bin"
done < "$CONF_FILE"

# Check if we have any browsers configured
if [[ ${#browsers[@]} -eq 0 ]]; then
    echo "No browsers configured in $CONF_FILE" >&2
    exit 1
fi

# Create menu options
menu_options=""
for browser in "${!browsers[@]}"; do
    menu_options="${menu_options}${browser}\n"
done

# Show rofi menu
chosen=$(echo -e "$menu_options" | rofi -dmenu -i -p "Open with" -theme-str 'window {width: 400px;}')

# Check if user made a selection
if [[ -z "$chosen" ]]; then
    echo "No browser selected" >&2
    exit 1
fi

# Get the command for the chosen browser
cmd="${browsers[$chosen]}"

# Check if command exists
if [[ -z "$cmd" ]]; then
    echo "No command found for: $chosen" >&2
    exit 1
fi

echo "Opening URL with: $cmd"
# Use eval to properly handle commands with multiple arguments
eval "nohup $cmd \"$URL\" >/dev/null 2>&1 &"
